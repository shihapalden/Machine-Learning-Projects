# -*- coding: utf-8 -*-
"""Clustering Customers with K-Means

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1M4Rga7glsQQ6sySyMUc8LrmiTuXMt2tT
"""

import pandas as pd
from sklearn.cluster import KMeans
import matplotlib.pyplot as plt
import seaborn as sns

data=  pd.read_excel('kmeans_clustering.xlsx')
x = data[['Annual Income', 'Spending Score']]

wcss = []
k_values = range(1, 11)

for k in k_values:
  kmeans = KMeans(n_clusters=k, random_state=0)
  kmeans.fit(x)
  wcss.append(kmeans.inertia_) #calculate the sum of the distance and append them

plt.figure(figsize=(10,6))
plt.plot(k_values, wcss, marker='o')
plt.title("Elbow Curve")
plt.xlabel("Number of clusters")
plt.ylabel("WCSS")
plt.grid()
plt.xticks(k_values) #It specifies where the ticks (the small marks on the axis) should be placed
plt.show()

kmeans = KMeans(n_clusters=4, random_state=0)

data['Clusters'] = kmeans.fit_predict(x)

cluster_counts = data['Clusters'].value_counts()
print(cluster_counts)

plt.figure(figsize=(10, 6))
sns.scatterplot(data=data, x='Annual Income', y='Spending Score', hue='Clusters', palette='viridis', s=100)
plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], s=100, c='red', label='Centroids')# kmeans.cluster_centers_[:, 0] selects the x-coordinates and kmeans.cluster_centers_[:, 1] selects the y-coordinates of the centroids.
plt.title("K-means Clustering of Customers")
plt.xlabel("Annual Income")
plt.ylabel("Spending Score")
plt.legend()
plt.show()